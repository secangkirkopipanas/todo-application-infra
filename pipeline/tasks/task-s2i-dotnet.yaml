apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-dotnet
spec:
  description: >-
    s2i-dotnet task fetches a Git repository and builds and pushes a container
    image using S2I and a .NET Core builder image.
  params:
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:00795fafdab9bbaa22cd29d1faa1a01e604e4884a2c935c1bf8e3d1f0ad1c084
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: latest
      description: The tag of .NET imagestream for .NET version
      name: VERSION
      type: string
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - description: Location of the repo where image has to be pushed
      name: IMAGE
      type: string
    - default: 'false'
      description: Skip pushing the built image
      name: SKIP_PUSH
      type: string
    - default: []
      description: Environment variables to set during _build-time_.
      name: ENV_VARS
      type: array
    - description: Git commit ID
      name: GIT_COMMIT_ID
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
      type: string
  steps:
    - args:
        - '$(params.ENV_VARS[*])'
      env:
        - name: HOME
          value: /tekton/home
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:98d8cb3a255641ca6a1bce854e5e2460c20de9fb9b28e3cc67eb459f122873dd
      name: generate
      resources: {}
      script: |
        echo "Processing Build Environment Variables"
        echo "" > /env-vars/env-file

        for var in "$@"
        do
            echo "$var" >> /env-vars/env-file
        done

        s2i build $(params.PATH_CONTEXT) \
        image-registry.openshift-image-registry.svc:5000/openshift/dotnet:$(params.VERSION) \
        --as-dockerfile /gen-source/Dockerfile.gen \
        --environment-file /env-vars/env-file
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /env-vars
          name: env-vars
      workingDir: $(workspaces.source.path)
    - name: build-and-push
      image: $(params.BUILDER_IMAGE)
      resources: {}
      script: |
        TAG_NAME="$(params.GIT_COMMIT_ID)"
        TAG_NAME="${TAG_NAME:0:10}"
        echo "Image name: $(params.IMAGE):$TAG_NAME"

        buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
          --layers -f /gen-source/Dockerfile.gen -t $(params.IMAGE):$TAG_NAME .

        [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0

        [[ "$(workspaces.dockerconfig.bound)" == "true" ]] && export DOCKER_CONFIG="$(workspaces.dockerconfig.path)"

        buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) \
          --digestfile $(workspaces.source.path)/image-digest $(params.IMAGE):$TAG_NAME \
          docker://$(params.IMAGE):$TAG_NAME

        cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
      securityContext:
        capabilities:
          add:
            - SETFCAP
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: env-vars
  workspaces:
    - mountPath: /workspace/source
      name: source
    - description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry. The file should be placed
        at the root of the Workspace with name config.json.
      name: dockerconfig
      optional: true
